pipeline:
  identifier: Build_srikanthlahanday_SpringJavaDemo_1736326201837
  name: Build SpringJavaDemo
  orgIdentifier: default
  projectIdentifier: default_project
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Github_OAuth_1736242057608
        repoName: srikanthlahanday/SpringJavaDemo
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: echo
                  name: Welcome msg
                  spec:
                    shell: Sh
                    command: echo hello world
                  timeout: ""
                  type: Run
              - step:
                  type: Run
                  name: Maven Build
                  identifier: Run_2
                  spec:
                    shell: Sh
                    command: mvn clean verify install
              - step:
                  type: Owasp
                  name: Owasp_1
                  identifier: Owasp_1
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      detection: auto
                    advanced:
                      log:
                        level: info
              - step:
                  type: ArtifactoryUpload
                  name: ArtifactoryUpload_1
                  identifier: ArtifactoryUpload_1
                  spec:
                    connectorRef: casestudyJan
                    target: libs-snapshot-local/
                    sourcePath: target/helloworld-0.0.1-SNAPSHOT.jar
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        type: CI
    - stage:
        name: Check Disk Space
        identifier: Check_Disk_Space
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget:
                      host: ec2-13-232-78-4.ap-south-1.compute.amazonaws.com
                      connectorRef: harness_sshprivatekeyharnessawsdeploy
                      workingDirectory: /tmp
                    source:
                      type: Inline
                      spec:
                        script: |-
                          #!/bin/bash

                          # Get the disk usage percentage for the root filesystem ("/")
                          disk_usage=$(df / | grep / | awk '{ print $5 }' | sed 's/%//')

                          # Check if the disk usage is greater than or less than 70%
                          if [ "$disk_usage" -gt 70 ]; then
                            echo "Disk space is over 70%. Current usage: $disk_usage%"
                          elif [ "$disk_usage" -lt 70 ]; then
                            echo "Disk space is under 70%. Current usage: $disk_usage%"
                          else
                            echo "Disk space usage is exactly 70%."
                          fi
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
              - step:
                  type: Email
                  name: Email_1
                  identifier: Email_1
                  spec:
                    to: srikanth.lahanday@opustechglobal.com
                    cc: ""
                    subject: space
                    body: "No space "
                  timeout: 10m
        tags: {}
    - stage:
        name: deploy
        identifier: deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Ssh
          service:
            serviceRef: Testingfordeploy
            serviceInputs:
              serviceDefinition:
                type: Ssh
                spec:
                  artifacts:
                    primary:
                      primaryArtifactRef: <+input>
                      sources: <+input>
          environment:
            environmentRef: casestudy
            deployToAll: false
            infrastructureDefinitions:
              - identifier: casestudyinfra
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Harness
                      spec:
                        file: /casestudy
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
            rollbackSteps: []
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
